{"version":3,"sources":["components/Top/Top.module.css","components/NavItems/NavItems.module.css","components/DishForms/DishForm/DishForm.module.css","components/Auth/Logout.js","components/Welcome/Welcome.js","components/Auth/SignInWidget.js","components/Auth/Login.js","components/UserLayout/UserLayout.js","components/User/User.js","components/Top/Top.js","components/NavItems/NavItem/NavItem.js","components/NavItems/NavItems.js","components/DishForms/DishForm/DishForm.js","hoc/Aux.js","components/DishForms/DishForms.js","components/AdminLayout/AdminLayout.js","components/Admin/Admin.js","App.js","serviceWorker.js","index.js","components/DishForms/DishForms.module.css","components/AdminLayout/AdminLayout.module.css"],"names":["module","exports","redirectUri","window","location","origin","Logout","props","logout","bind","this","auth","getIdToken","idToken","href","onClick","Component","withAuth","Welcome","username","to","SignInWidget","el","ReactDOM","findDOMNode","widget","OktaSignIn","baseUrl","logo","authParams","pkce","renderEl","onSuccess","onError","remove","res","status","redirect","sessionToken","session","token","err","console","log","state","authenticated","checkAuthentication","isAuthenticated","setState","pathname","UserLayout","user","top","className","classes","Top","navItem","clicked","children","navItems","NavItemList","navItemList","map","index","NavItem","key","unshift","NavItems","URL","Dishform","id","undefined","currentDishesArr","_id","setName","type","dishName","ingredient","submitHandler","event","preventDefault","dishObj","sendAddNewFetch","sendUpdateFetch","obj","axios","method","url","data","then","response","sendDeleteFetch","inputChangeHandler","e","target","name","value","nextProps","DishForm","style","display","displayIndex","onSubmit","htmlFor","onChange","ref","required","aux","DishForms","displayArr","toggle","loading","getDishesHandler","setname","setDisplayIndexHandler","newArr","currentSetIndex","dishDisplay","Loading","dish","refresh","Aux","Layout","setsList","currentDishIndex","currentDishArr","lodaing","navClickedHandler","getCurrentDishesArr","getAllSetsHandler","componentDidMount","AdminLayout","Dishforms","admin","onAuthRequired","history","push","App","basename","Security","issuer","clientId","path","process","exact","component","render","ImplicitCallback","User","Admin","Boolean","hostname","match","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.183c1ba0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Top\":\"Top_Top__3Korq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems_NavItems__3VOFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DishForm\":\"DishForm_DishForm__1wcrL\"};","import React, { Component } from 'react';\nimport { withAuth } from '@okta/okta-react';\n\nconst issuer = 'https://dev-421319.okta.com/oauth2/default';\nconst redirectUri = `${window.location.origin}`;\n\n\n\n// Basic component with logout button\nclass Logout extends Component {\n    constructor(props) {\n        super(props);\n        this.logout = this.logout.bind(this);\n    }\n\n    async logout() {\n        // Read idToken before local session is cleared\n        const idToken = await this.props.auth.getIdToken();\n\n        // Clear local session\n        await this.props.auth.logout('/');\n\n        // Clear remote session\n        window.location.href = `${issuer}/v1/logout?id_token_hint=${idToken}&post_logout_redirect_uri=${redirectUri}`;\n    }\n\n    render() {\n        return (\n            <p onClick={this.logout}>Logout</p>\n        );\n    }\n};\n\n\n\n// withAuth() makes Okta \"Auth\" object available as \"this.props.auth\"\nLogout = withAuth(Logout);\n\n\nexport default Logout","\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Logout from '../Auth/Logout';\n\nexport default function Welcome(props) {\n    return (\n        <div>\n            <h1>Welcome {props.username} !!!</h1>\n            <Link to='/user'>User</Link>\n            <Link to='/admin'>Admin</Link>\n            <Logout></Logout>\n        </div>\n    )\n}\n","// src/OktaSignInWidget.js\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport OktaSignIn from '@okta/okta-signin-widget';\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\n// import '@okta/okta-signin-widget/dist/css/okta-theme.css';\n\nclass SignInWidget extends Component {\n  componentDidMount() {\n    const el = ReactDOM.findDOMNode(this);\n    this.widget = new OktaSignIn({\n      baseUrl: this.props.baseUrl,\n      logo: 'logo.png',\n      authParams: {\n        pkce: true\n      }\n    });\n    this.widget.renderEl({el}, this.props.onSuccess, this.props.onError);\n  }\n\n  componentWillUnmount() {\n    this.widget.remove();\n  }\n\n  render() {\n    return <div />;\n  }\n};\n\nexport default SignInWidget;","// src/Login.js\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport SignInWidget from './SignInWidget';\nimport { withAuth } from '@okta/okta-react';\n\nexport default withAuth(class Login extends Component {\n    constructor(props) {\n        super(props);\n        // this.onSuccess = this.onSuccess.bind(this);\n        // this.onError = this.onError.bind(this);\n        this.state = {\n            authenticated: null\n        };\n        this.checkAuthentication();\n    }\n\n    async checkAuthentication() {\n        const authenticated = await this.props.auth.isAuthenticated();\n        if (authenticated !== this.state.authenticated) {\n            this.setState({ authenticated });\n        }\n    }\n\n    componentDidUpdate() {\n        this.checkAuthentication();\n    }\n\n    onSuccess = (res) => {\n        if (res.status === 'SUCCESS') {\n            return this.props.auth.redirect({\n                sessionToken: res.session.token\n            });\n        } else {\n            // The user can be in another authentication state that requires further action.\n            // For more information about these states, see:\n            //   https://github.com/okta/okta-signin-widget#rendereloptions-success-error\n        }\n    }\n\n    onError = (err) => {\n        console.log('error logging in', err);\n    }\n\n    render() {\n        if (this.state.authenticated === null) return null;\n        return this.state.authenticated ?\n            <Redirect to={{ pathname: '/' }} /> :\n            <SignInWidget\n                baseUrl={this.props.baseUrl}\n                onSuccess={this.onSuccess}\n                onError={this.onError} />;\n    }\n});","import React, { Component } from 'react'\n\n\nclass UserLayout extends Component {\n    render() {\n        return (\n            <div>\n                Userlayout\n            </div>\n        )\n    }\n}\n\nexport default UserLayout;","import React from 'react'\n\nimport UserLayout from '../UserLayout/UserLayout'\n\nconst user = () => {\n    return(\n        <div>\n            <UserLayout/>\n        </div>\n    );\n}\n\nexport default user;","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport classes from './Top.module.css'\n\nconst top = (props) => {\n    return (\n        <div className={classes.Top}>\n            <Link to=\"/\">Home</Link>\n        </div>\n    );\n}\n\nexport default top;","import React from 'react'\n// import classes from './NavItem.module.css'\n\nconst navItem = (props) => {\n    return(\n        <li onClick={props.clicked}>{props.children}</li>\n    );\n}\n\nexport default navItem;","import React from 'react'\n\nimport NavItem from './NavItem/NavItem'\nimport classes from './NavItems.module.css'\n\nconst navItems = (props) => {\n    const NavItemList = props.navItemList.map((el, index) => {\n        return <NavItem clicked={() => props.clicked(index + 1)} key={index + 1}>{el}</NavItem>\n    })\n    NavItemList.unshift(<NavItem clicked={() => props.clicked(0)} key={0}>Add New</NavItem>)\n    return (\n        <ul className={classes.NavItems}>\n            {NavItemList}\n        </ul>\n    );\n}\n    \nexport default navItems;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport classes from './DishForm.module.css'\n\n// const URL = \"https://imenu-server.herokuapp.com/\"\nconst URL = \"http://localhost:3001\"\n\nclass Dishform extends Component {\n    state = {\n        id: this.props.currentDishesArr === undefined ? '' : this.props.currentDishesArr._id,\n        setName: this.props.currentDishesArr === undefined ? '' : this.props.currentDishesArr.setName,\n        index: this.props.currentDishesArr === undefined ? '' : this.props.currentDishesArr.index,\n        type: this.props.currentDishesArr === undefined ? '' : this.props.currentDishesArr.type,\n        dishName: this.props.currentDishesArr === undefined ? '' : this.props.currentDishesArr.dishName,\n        ingredient: this.props.currentDishesArr === undefined ? '' : this.props.currentDishesArr.ingredient,\n    }\n\n    componentDidUpdate(nextProps) {\n        // check if the props equals to the next props\n        if (this.props.currentDishesArr !== undefined) {\n            if (nextProps.currentDishesArr.id === this.state.id) {\n                return\n            } else {\n                this.setState({\n                    id: nextProps.currentDishesArr.id,\n                    setName: nextProps.currentDishesArr.setName,\n                    index: nextProps.currentDishesArr.index,\n                    type: nextProps.currentDishesArr.type,\n                    dishName: nextProps.currentDishesArr.dishName,\n                    ingredient: nextProps.currentDishesArr.ingredient,\n                });\n            }\n        }\n\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        const dishObj = { ...this.state }\n        if (this.props.currentDishesArr === undefined) {\n            console.log(dishObj)\n            this.sendAddNewFetch(dishObj)\n        } else {\n            console.log(dishObj)\n            this.sendUpdateFetch(dishObj)\n        }\n\n\n    }\n\n    sendAddNewFetch = (obj) => {\n        console.log(\"add new\")\n\n        axios({\n            method: 'post',\n            url: URL + '/addnewdish',\n            data: obj\n        })\n            .then((response) => {\n                console.log(response)\n            });\n    }\n\n    sendUpdateFetch = (obj) => {\n\n        axios({\n            method: 'post',\n            url: URL + '/updatedish',\n            data: obj\n        })\n            .then((response) => {\n                console.log(response)\n            });\n    }\n\n    sendDeleteFetch = (obj) => {\n\n        axios({\n            method: 'post',\n            url: URL + '/deletedish',\n            data: obj\n        })\n            .then((response) => {\n                console.log(response)\n            });\n    }\n\n    inputChangeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n\n    render() {\n\n        return (\n            <div className={classes.DishForm}  style={{ display: this.props.displayIndex ? \"block\" : \"none\" }}>\n                <form onSubmit={this.submitHandler}>\n                    <div className=\"form-row\">\n                        <div className=\"form-group col-md-3\">\n                            <label htmlFor=\"setName\">Set name: </label>\n                            <input className=\"form-control\" onChange={this.inputChangeHandler} name=\"setName\" ref=\"setName\" type=\"text\" required value={this.state.setName}></input>\n                        </div>\n                        <div className=\"form-group col-md-3\">\n                            <label htmlFor=\"index\">Index: </label>\n                            <input className=\"form-control\" onChange={this.inputChangeHandler} name=\"index\" ref=\"index\" type=\"text\" required value={this.state.index}></input>\n                        </div>\n                        <div className=\"form-group col-md-3\">\n                            <label htmlFor=\"type\">Type: </label>\n                            <input className=\"form-control\" onChange={this.inputChangeHandler} name=\"type\" ref=\"type\" type=\"text\" required value={this.state.type}></input>\n                        </div>\n                        <div className=\"form-group col-md-3\">\n                            <label htmlFor=\"dishName\">Dish name: </label>\n                            <input className=\"form-control\" onChange={this.inputChangeHandler} name=\"dishName\" ref=\"dishName\" type=\"text\" required value={this.state.dishName}></input>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"ingredient\">Ingredient: </label>\n                        <textarea className=\"form-control\" onChange={this.inputChangeHandler} name=\"ingredient\" ref=\"ingredient\" type=\"text\" required value={this.state.ingredient}></textarea>\n                    </div>\n                    <input\n                        className=\"btn btn-primary\"\n                        type=\"submit\"\n                        // style={{ display: this.props.displayIndex ? \"block\" : \"none\" }}\n                         />\n                </form>\n                <div className=\"btn-group ml-3\">\n                    \n                    <button\n                        className=\"btn btn-danger\"\n                        type=\"button\"\n                        // style={{ display: this.props.displayIndex ? \"block\" : \"none\" }}\n                        onClick={() => { this.sendDeleteFetch(this.state) }}>Delete</button>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Dishform;","\n\nconst aux = (props) => props.children\n\nexport default aux;","import React, { Component } from 'react'\n\nimport DishForm from './DishForm/DishForm';\nimport classes from './DishForms.module.css'\n\nimport Aux from '../../hoc/Aux'\n\nclass DishForms extends Component {\n\n    state = {\n        // displayIndex: null,\n        displayArr: [],\n        toggle: this.props.displayIndex,\n        loading: this.props.loading,\n    }\n\n    getDishesHandler = (setname) => {\n        // send request find setname = setname\n        // return the array objects\n        // setstate oldDishes: array obj\n    }\n\n    setDisplayIndexHandler = (index) => {\n        // [true, false, true]\n        const newArr = [...this.state.displayArr]\n        newArr[index] = !newArr[index]\n        this.setState({ displayArr: newArr })\n    }\n\n    // synchronize the props.loading and state.\n    componentWillUpdate(nextProps) {\n        if (nextProps.loading !== this.props.loading) {\n            this.setState({ loading: nextProps.loading })\n        }\n\n        // \n        if (nextProps.currentSetIndex !== this.props.currentSetIndex) {\n            this.setState({ displayArr: [] });\n        }\n    }\n\n\n\n    render() {\n\n\n        let dishDisplay;\n        if (this.props.currentSetIndex !== 0) {\n            if (this.state.loading) {\n                return <h1 className={classes.Loading}>Loading...</h1>\n            } else {\n                dishDisplay = this.props.currentDishesArr.map((dish, index) => {\n                    return (\n                        <div className={classes.DishForms} key={index}>\n                            <h2 onClick={() => this.setDisplayIndexHandler(index)}>{dish.dishName} {this.state.displayArr[index] ? '▼' : '▲'}</h2>\n                            <DishForm refresh={this.props.refresh} currentDishesArr={this.props.currentDishesArr[index]} displayIndex={this.state.displayArr[index]}></DishForm>\n                        </div>\n                    );\n\n                })\n            }\n\n        } else {\n            dishDisplay = <div className={classes.DishForms} ><DishForm displayIndex={true} /></div>\n        }\n\n        return (\n            <Aux>\n                {dishDisplay}\n            </Aux>\n            // <DishForm dishArr={null}></DishForm>\n\n        );\n    }\n}\n\nexport default DishForms;","import React, { Component } from 'react'\nimport Top from '../Top/Top'\nimport NavItems from '../NavItems/NavItems';\nimport Dishforms from '../DishForms/DishForms'\nimport axios from 'axios'\n\nimport classes from './AdminLayout.module.css'\n\n// import Aux from '../../hoc/Aux'\n\n// const URL = \"https://imenu-server.herokuapp.com/\"\nconst URL = \"http://localhost:3001\"\n\n\nclass Layout extends Component {\n\n    state = {\n        setsList: [],\n        currentSetIndex: 1,\n        currentDishIndex: null,\n        currentDishesArr: [],\n        currentDishArr: [],\n        lodaing: false,\n    }\n\n    navClickedHandler = (index) => {\n        this.setState({ currentSetIndex: index })\n        console.log(index)\n        this.getCurrentDishesArr(this.state.setsList[index - 1])\n        // getCurrentDishesArr\n    }\n\n    getAllSetsHandler = () => {\n        this.setState({ loading: true })\n        axios({\n            method: 'get',\n            url: URL + '/findallsets',\n        })\n            .then((response) => {\n                const data = response.data\n                this.setState({ setsList: data, loading: false })\n            });\n    }\n\n    getCurrentDishesArr = (setName) => {\n        this.setState({loading: true})\n        axios({\n            method: 'post',\n            url: URL + '/findDishes',\n            data: {\n                setName: setName\n            }\n        })\n            .then((response) => {\n                const data = response.data\n                this.setState({ currentDishesArr: data, loading: false })\n            });\n    }\n    componentDidMount = () => {\n        this.getAllSetsHandler()\n    }\n\n\n    render() {\n\n        return (\n            <div className={classes.AdminLayout}>\n                <Top />\n                <NavItems className={classes.NavItems} clicked={(index) => this.navClickedHandler(index)} navItemList={this.state.setsList}></NavItems>\n                <Dishforms\n                    className={classes.Dishforms}\n                    currentDishArr={this.state.currentDishArr}\n                    currentDishesArr={this.state.currentDishesArr}\n                    currentSetIndex={this.state.currentSetIndex}\n                    loading={this.state.loading} />\n            </div>\n        );\n    }\n}\n\nexport default Layout;\n\n","import React from 'react'\n// import Top from '../Top/Top';\nimport AdminLayout from '../AdminLayout/AdminLayout'\nimport Aux from '../../hoc/Aux'\n\nconst admin = () => {\n    return (\n        <Aux>\n            <AdminLayout />\n        </Aux>\n\n\n    );\n}\n\nexport default admin;","import React from 'react';\n\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Security, SecureRoute, ImplicitCallback } from '@okta/okta-react';\n\nimport Welcome from './components/Welcome/Welcome';\n\nimport Login from './components/Auth/Login';\nimport User from './components/User/User';\nimport Admin from './components/Admin/Admin'\n\n\nfunction onAuthRequired({ history }) {\n  history.push('/login');\n}\n\n\nfunction App() {\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <Security Security issuer='https://dev-421319.okta.com/oauth2/default'\n        clientId='0oa2de4uv9SXNxF4Z4x6'\n        redirectUri={window.location.origin + '/implicit/callback'}\n        onAuthRequired={onAuthRequired}\n        pkce={true} >\n        {/* <div className=\"App\"> */}\n          <SecureRoute path={process.env.PUBLIC_URL} exact={true} component={Welcome}></SecureRoute>\n          <Route path={process.env.PUBLIC_URL + '/login'} render={() => <Login baseUrl='https://dev-421319.okta.com' />} />\n          <Route path={process.env.PUBLIC_URL +'/implicit/callback'} component={ImplicitCallback} />\n          <Route path={process.env.PUBLIC_URL + '/user'} component={User}></Route>\n          <Route path={process.env.PUBLIC_URL +'/admin'} component={Admin}></Route>\n        {/* </div> */}\n      </Security>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DishForms\":\"DishForms_DishForms__2QM3V\",\"Loading\":\"DishForms_Loading__2yYe0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AdminLayout\":\"AdminLayout_AdminLayout__1qbLz\",\"Dishforms\":\"AdminLayout_Dishforms__3w3dU\"};"],"sourceRoot":""}